plugins {
	id 'idea'
	id 'application'
	id 'org.jetbrains.kotlin.jvm' version '1.5.31'
	id 'org.openjfx.javafxplugin' version '0.0.10'
	id 'org.jlleitschuh.gradle.ktlint' version '10.2.0'
	id 'org.beryx.jlink' version '2.23.8'
	id 'com.google.osdetector' version '1.6.2'
}

group = 'info.hildegynoid'
version = 1.0

def appPackaging = "cue-converter"

application {
	mainModule = 'main'
	mainClassName = "info.hildegynoid.cue.converter.Main"
}

sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
	implementation 'io.github.microutils:kotlin-logging:2.0.11'
	implementation 'ch.qos.logback:logback-classic:1.2.6'

	testImplementation(platform('org.junit:junit-bom:5.8.1'))
	testImplementation 'org.junit.jupiter:junit-jupiter'
}

javafx {
	version = "17"
	modules = ['javafx.controls', 'javafx.graphics']
}

compileKotlin {
	kotlinOptions {
		jvmTarget = "11"
	}
}
compileTestKotlin {
	kotlinOptions {
		jvmTarget = "11"
	}
}

jlink {
	options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
	addExtraDependencies("javafx")

	mergedModule {
		excludeProvides service: 'javax.servlet.ServletContainerInitializer'
	}

	jpackage {
		skipInstaller = true
	}
}

task zip(type: Zip, dependsOn: jpackage) {
    archiveFileName = "${appPackaging}-v${project.version}-${javafx.platform.classifier}.zip"
    switch (javafx.platform.classifier) {
        case 'mac':
            from "build/jpackage/${appPackaging}.app"
            into "${appPackaging}.app"
            break
        case 'win':
            from "build/jpackage/${appPackaging}"
            into "${appPackaging}"
            break
    }
}

test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
}

ktlint {
	disabledRules = ["import-ordering"]
}
